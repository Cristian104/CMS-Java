/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package cms.project;
import classes.cLogin;
import classes.cUser;
import classes.deleteObject;
import com.formdev.flatlaf.FlatDarculaLaf;
import com.formdev.flatlaf.FlatDarkLaf;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Jorg
 */
public class mainScreenManager extends javax.swing.JFrame {
    
    /**
     * Creates new form mainScreen
     * @param user
     */
    
    private cUser user;
    private String selectedUsername;

    
    public mainScreenManager(cUser user) {
        
         /* Set the Nimbus look and feel */
        try {
        UIManager.setLookAndFeel(new FlatDarculaLaf());
        } catch (Exception e) {
        e.printStackTrace();
        }
        
        initComponents();

        
        welcomeUsername.setText("Welcome " + user.getUsername());
        showUserTable();
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        usersTable = new javax.swing.JScrollPane();
        myUsers = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        welcomeUsername = new javax.swing.JLabel();
        updateBtn = new javax.swing.JButton();
        filterText = new javax.swing.JTextField();
        searchBtn = new javax.swing.JLabel();
        userPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        cUsernameTF = new javax.swing.JTextField();
        cUsernameTxt = new javax.swing.JLabel();
        cPasswordTF = new javax.swing.JTextField();
        cPasswordTxt = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator1 = new javax.swing.JSeparator();
        cCreateUser = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        selectedUsernameTxt = new javax.swing.JLabel();
        cUsernameTxt2 = new javax.swing.JLabel();
        editBtn = new javax.swing.JButton();
        resultsBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        myUsers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Email", "Job Role", "Results"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        usersTable.setViewportView(myUsers);
        if (myUsers.getColumnModel().getColumnCount() > 0) {
            myUsers.getColumnModel().getColumn(0).setResizable(false);
            myUsers.getColumnModel().getColumn(1).setResizable(false);
        }

        jLabel1.setFont(new java.awt.Font("Roboto Black", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("My Users");
        jLabel1.setToolTipText("");

        welcomeUsername.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        welcomeUsername.setText("Welcome User");

        updateBtn.setText("Update");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        filterText.setToolTipText("search");
        filterText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterTextActionPerformed(evt);
            }
        });

        searchBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/searchResized.png"))); // NOI18N

        userPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Roboto Black", 0, 12)); // NOI18N
        jLabel2.setText("Selected User");
        userPanel.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 10, -1, -1));

        cUsernameTF.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        userPanel.add(cUsernameTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, 200, -1));

        cUsernameTxt.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        cUsernameTxt.setText("Username");
        userPanel.add(cUsernameTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 30, -1, -1));

        cPasswordTF.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        userPanel.add(cPasswordTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 100, 200, -1));

        cPasswordTxt.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        cPasswordTxt.setText("Password");
        userPanel.add(cPasswordTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, -1, -1));

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        userPanel.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 10, 10, 160));
        userPanel.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 628, 10));

        cCreateUser.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        cCreateUser.setText("Create");
        userPanel.add(cCreateUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 140, -1, -1));

        jLabel3.setFont(new java.awt.Font("Roboto Black", 0, 12)); // NOI18N
        jLabel3.setText("Create a new user");
        userPanel.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, -1, -1));

        selectedUsernameTxt.setFont(new java.awt.Font("Roboto Medium", 0, 12)); // NOI18N
        userPanel.add(selectedUsernameTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 60, -1, -1));

        cUsernameTxt2.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        cUsernameTxt2.setText("Username:");
        userPanel.add(cUsernameTxt2, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 40, -1, -1));

        editBtn.setBackground(new java.awt.Color(255, 153, 0));
        editBtn.setFont(new java.awt.Font("Roboto Medium", 0, 12)); // NOI18N
        editBtn.setForeground(new java.awt.Color(255, 255, 255));
        editBtn.setText("Edit");
        editBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBtnActionPerformed(evt);
            }
        });
        userPanel.add(editBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 110, -1, -1));

        resultsBtn.setFont(new java.awt.Font("Roboto Medium", 0, 12)); // NOI18N
        resultsBtn.setText("Results");
        resultsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resultsBtnActionPerformed(evt);
            }
        });
        userPanel.add(resultsBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 110, -1, -1));

        deleteBtn.setBackground(new java.awt.Color(255, 51, 51));
        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });
        userPanel.add(deleteBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(556, 147, 70, 20));

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(welcomeUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateBtn)
                    .addComponent(usersTable, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(filterText, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(userPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(53, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(welcomeUsername)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(userPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBtn, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(filterText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(usersTable, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(updateBtn)
                .addGap(17, 17, 17))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void filterTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filterTextActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        showUserTable();
    }//GEN-LAST:event_updateBtnActionPerformed

    private void editBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBtnActionPerformed
        // TODO add your handling code here:
        // create a new instance of the frame
        editObject editFrame = new editObject(selectedUsername);

    
        // set the parent frame of the new frame
        //editFrame.setParentFrame(this);
        
        // center the new frame on the parent frame
        editFrame.setLocationRelativeTo(this);

        // display the new frame
        editFrame.setVisible(true);

    }//GEN-LAST:event_editBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        // TODO add your handling code here:
        // Create an instance of the DeleteObject class
        deleteObject deleteObject = new deleteObject();

        // Call the deleteUser method with the selectedUsername as a parameter
        boolean deleteSuccessful = deleteObject.deleteUser(selectedUsername);

        // Refresh the table to show the updated data
        showUserTable();
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void resultsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resultsBtnActionPerformed
        // TODO add your handling code here:
        resultsManager managerScreen = new resultsManager(selectedUsername);
        // Center the new frame on the parent frame
        managerScreen.setLocationRelativeTo(this);
        managerScreen.setVisible(true);

    }//GEN-LAST:event_resultsBtnActionPerformed

    
    
    public void showUserTable(){

        try {
        // Declare necessary variables for database connection and query
        ResultSet rs = null;
        PreparedStatement ps = null;

        classes.cConnect objectConnection = new classes.cConnect();

        // Prepare the query statement
        String query = "SELECT username, email, jobrole FROM users WHERE role = 'user'";
        ps = objectConnection.establishConnection().prepareStatement(query);

        // Execute the query and get the result set
        rs = ps.executeQuery();

        // Create a DefaultTableModel with column names and 0 rows
        String[] columnNames = {"Username", "Email", "Job Role"};
        DefaultTableModel model = new DefaultTableModel(columnNames, 0);

        // Loop through the ResultSet and add each row to the model
        while (rs.next()) {
            String username = rs.getString("username");
            String email = rs.getString("email");
            String jobrole = rs.getString("jobrole");

            Object[] row = {username, email, jobrole};
            model.addRow(row);
        }

        // Clear the table model
        DefaultTableModel tableModel = (DefaultTableModel) myUsers.getModel();
        tableModel.setRowCount(0);

        // Set the model to the JTable
        myUsers.setModel(model);

        // Reflect Username on the Selected Username Section
        myUsers.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent e) {
                // Get the selected row index
                int selectedRow = myUsers.getSelectedRow();

                // Get the username from the selected row and set it to a label
                String username = (String) myUsers.getValueAt(selectedRow, 0);
                selectedUsernameTxt.setText(username);
                selectedUsername = username;

                // Print the selected username to the console
//                System.out.println("Selected username: " + username);

            }
        });

        // Close the ResultSet, PreparedStatement, and Connection
        rs.close();
        ps.close();
        objectConnection.closeConnection();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "ERROR:" + e.toString());
    }


    
        
    };  
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                cUser user = null;
                new mainScreenManager(user).setVisible(true);
            }
        });
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cCreateUser;
    private javax.swing.JTextField cPasswordTF;
    private javax.swing.JLabel cPasswordTxt;
    private javax.swing.JTextField cUsernameTF;
    private javax.swing.JLabel cUsernameTxt;
    private javax.swing.JLabel cUsernameTxt2;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JButton editBtn;
    private javax.swing.JTextField filterText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable myUsers;
    private javax.swing.JButton resultsBtn;
    private javax.swing.JLabel searchBtn;
    private javax.swing.JLabel selectedUsernameTxt;
    private javax.swing.JButton updateBtn;
    private javax.swing.JPanel userPanel;
    private javax.swing.JScrollPane usersTable;
    private javax.swing.JLabel welcomeUsername;
    // End of variables declaration//GEN-END:variables
}

    


